0 info it worked if it ends with ok
1 verbose cli [ '/home/ubuntu/.nvm/versions/node/v0.12.10/bin/node',
1 verbose cli   '/home/ubuntu/.nvm/versions/node/v0.12.10/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@2.14.9
3 info using node@v0.12.10
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/ubuntu/workspace/ss_NEW/node_modules/express-hotmods',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/ubuntu/.npm/express-hotmods/1.0.0/package.tgz not in flight; packing
9 verbose tar pack [ '/home/ubuntu/.npm/express-hotmods/1.0.0/package.tgz',
9 verbose tar pack   '/home/ubuntu/workspace/ss_NEW/node_modules/express-hotmods' ]
10 verbose tarball /home/ubuntu/.npm/express-hotmods/1.0.0/package.tgz
11 verbose folder /home/ubuntu/workspace/ss_NEW/node_modules/express-hotmods
12 info prepublish express-hotmods@1.0.0
13 verbose addLocalTarball adding from inside cache /home/ubuntu/.npm/express-hotmods/1.0.0/package.tgz
14 silly cache afterAdd express-hotmods@1.0.0
15 verbose afterAdd /home/ubuntu/.npm/express-hotmods/1.0.0/package/package.json not in flight; writing
16 verbose afterAdd /home/ubuntu/.npm/express-hotmods/1.0.0/package/package.json written
17 silly publish { name: 'express-hotmods',
17 silly publish   version: '1.0.0',
17 silly publish   description: 'Reload and use new modules without restarting Express.',
17 silly publish   main: 'index.js',
17 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
17 silly publish   keywords: [ 'Express', 'modules', 'middleware', 'reload' ],
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'https: //github.com/sladec/express-hotmods.git' },
17 silly publish   author: { name: 'Slade Colling', email: 'sladecolling@gmail.com' },
17 silly publish   license: 'MIT',
17 silly publish   readme: '# express-hotmods\n\n### Automatically reload your express modules with a keyword parameter in url. \n\nOne thing i enjoyed about PHP was the ability to edit a .php script and just reload the web page to see changes.\nNow with express-hotmods you can reload your modules and their child modules by adding a keyword parameter to your urls while you are developing.\n##### http://my_express_server.com/path/to/module?some_param=value&_reload\n\n### Installation:\n```sh\n$ npm install express-hotmods\n```\n### Use:\nin your express router e.g  *app.js*\n```js\nvar app = express();\napp.use(\'/api\', require(\'express-hotmods\')(__dirname + \'/api\', \'__reload\'));\n```\n### Constructor:\n```js\n require(\'express-hotmods\')(\'path\', \'keyword\'));\n```\n - path: full path to folder with express modules.\n - keyword: parameter to reload modules.  e.g \'_debug\'\n\n### Modules\nexample express app\n```\n.\n+-- app.js\n+-- views/\n+-- routes/\n+-- api/\n    +-- my_module.js\n    +-- another_module.js\n```\n\n```js\napp.use(\'/api\', require(\'express-hotmods\')(__dirname + \'/api\', \'_reload\'));\n```\n###### http://my_express_server.com/api/my_module?_reload\nThe module name is called directly in url (- .js)\n\n#### Call function endpoints in modules:\n###### http://my_express_server.com/api/another_module/_function1?_reload\nIf the last path item starts with \'_\' **express-hotmods** will attempt to call _function_ name.\n\nin *another_module.js*\n```js\nmodule.exports = {\n    function1: function1,\n    function2: function2,    \n};\n...\nfunction function1(req,res){\n  ...\n}\n...\nfunction function2(req,res){\n  ...\n}\n```\n#### Child modules\n**express-hotmods** will also try reload all child modules required by your module.\n\n##### Note\nUse of `setInterval` in a module gets loaded in the global space and does not get destroyed on reload, so you will end up with multiple `setInterval` running after each reloading, so not recommended at the moment, unless I can figure out how to control them.\n##### TODO\n - Finish rendering a module usage viewer if you hit http://my_express_server.com/folder/ \n - Node does not seem to list child modules correctly in *Modules* object  if another module has already loaded same child module  \nThis is my first published npm module, so any pointers or improvements would be appreciated. \n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '13a58a37b424d691f1d5ca7f6125fbd81f2f5b24',
17 silly publish   _id: 'express-hotmods@1.0.0',
17 silly publish   _shasum: '4534650d47dc8634c7992c0ec51fcd240bd17e68',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name express-hotmods
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/express-hotmods
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /home/ubuntu/.npm/express-hotmods/1.0.0/package.tgz
25 verbose request uri https://registry.npmjs.org/express-hotmods
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 1:38:04 PM
28 verbose request using bearer token for auth
29 verbose request id d78b3d03c69c6b0b
30 http request PUT https://registry.npmjs.org/express-hotmods
31 http 403 https://registry.npmjs.org/express-hotmods
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=300',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Fri, 04 Mar 2016 13:38:05 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-lcy1121-LCY',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1457098684.536667,VS0,VE914' }
33 verbose request invalidating /home/ubuntu/.npm/registry.npmjs.org/express-hotmods on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 1.0.0." : express-hotmods
35 verbose stack     at makeError (/home/ubuntu/.nvm/versions/node/v0.12.10/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/home/ubuntu/.nvm/versions/node/v0.12.10/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
35 verbose stack     at Request._callback (/home/ubuntu/.nvm/versions/node/v0.12.10/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
35 verbose stack     at Request.self.callback (/home/ubuntu/.nvm/versions/node/v0.12.10/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at Request.emit (events.js:110:17)
35 verbose stack     at Request.<anonymous> (/home/ubuntu/.nvm/versions/node/v0.12.10/lib/node_modules/npm/node_modules/request/request.js:1082:10)
35 verbose stack     at Request.emit (events.js:129:20)
35 verbose stack     at IncomingMessage.<anonymous> (/home/ubuntu/.nvm/versions/node/v0.12.10/lib/node_modules/npm/node_modules/request/request.js:1009:12)
35 verbose stack     at IncomingMessage.emit (events.js:129:20)
35 verbose stack     at _stream_readable.js:908:16
36 verbose statusCode 403
37 verbose pkgid express-hotmods
38 verbose cwd /home/ubuntu/workspace/ss_NEW/node_modules/express-hotmods
39 error Linux 4.2.0-c9
40 error argv "/home/ubuntu/.nvm/versions/node/v0.12.10/bin/node" "/home/ubuntu/.nvm/versions/node/v0.12.10/bin/npm" "publish"
41 error node v0.12.10
42 error npm  v2.14.9
43 error code E403
44 error "You cannot publish over the previously published version 1.0.0." : express-hotmods
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
